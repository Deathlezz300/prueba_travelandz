

export interface FilterBasicData {
    VehiclesTypes: VehiclesType[];
    transferTypes: TransferType[];
}

export interface VehiclesType {
    masterTransferTypeCode: string;
    masterCategoryCode:     string;
    masterVehicleCode:      string;
    name:                   string;
    description:            string;
}


export interface TransferType {
    code:        string;
    name:        string;
    description: string;
}


export interface CountriesResponse {
    code: string;
    name: string;
}

export interface ValueFiled{
    code:string,
    value:string
}


export interface TransfersResponse {
    search:   Search;
    services: Service[];
}

export interface Search {
    language:  string;
    departure: ComeBack;
    comeBack:  ComeBack;
    occupancy: Occupancy;
    from:      From;
    to:        From;
}

export interface ComeBack {
    date: string;
    time: string;
}

export interface From {
    code:        string;
    description: string;
    type:        FromType;
}


export enum FromType {
    Atlas = "ATLAS",
    Iata = "IATA",
}

export interface Occupancy {
    adults:   number;
    children: number;
    infants:  number;
}

export interface Service {
    id:                   number;
    direction:            string;
    transferType:         string;
    vehicle:              Category;
    category:             Category;
    pickupInformation:    PickupInformation;
    minPaxCapacity:       number;
    maxPaxCapacity:       number;
    content:              Content;
    price:                Price;
    rateKey:              string;
    cancellationPolicies: CancellationPolicy[];
    links:                Link[];
    factsheetId:          number;
}

export interface CancellationPolicy {
    amount:         number;
    from:           string;
    currencyId:     string;
    isForceMajeure: null;
}

export interface Category {
    code: Code;
    name: Name;
}

export enum Code {
    CR = "CR",
    Prm = "PRM",
    Stnd = "STND",
}

export enum Name {
    Car = "Car",
    Premium = "Premium",
    Standard = "Standard",
}

export interface Content {
    vehicle:                  Category;
    category:                 Category;
    images:                   Image[];
    transferDetailInfo:       TransferDetailInfo[];
    customerTransferTimeInfo: any[];
    supplierTransferTimeInfo: any[];
    transferRemarks:          TransferRemark[];
}

export interface Image {
    url:  string;
    type: string;
}

export interface TransferDetailInfo {
    id:          string;
    name:        string;
    description: string;
    type:        TransferDetailInfoType;
}

export enum TransferDetailInfoType {
    GeneralInfo = "GENERAL_INFO",
}

export interface TransferRemark {
    type:        string;
    description: string;
    mandatory:   boolean;
}

export interface Link {
    rel:    string;
    href:   string;
    method: string;
}

export interface PickupInformation {
    from:   From;
    to:     From;
    date:   string;
    time:   string;
    pickup: Pickup;
}

export interface Pickup {
    address:     null;
    number:      null;
    town:        null;
    zip:         null;
    description: string;
    altitude:    null;
    latitude:    number | null;
    longitude:   number | null;
    checkPickup: CheckPickup;
    pickupId:    null;
    stopName:    null;
    image:       null;
}

export interface CheckPickup {
    mustCheckPickupTime:   boolean;
    url:                   null;
    hoursBeforeConsulting: null;
}

export interface Price {
    totalAmount: number;
    netAmount:   null;
    currencyId:  string;
}

// Generated by https://quicktype.io


